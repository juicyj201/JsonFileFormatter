{"version":3,"file":"haxe-DWtZc5G9.js","sources":["../NodeLib/node_modules/@codemirror/legacy-modes/mode/haxe.js"],"sourcesContent":["// Tokenizer\n\nfunction kw(type) {return {type: type, style: \"keyword\"};}\nvar A = kw(\"keyword a\"), B = kw(\"keyword b\"), C = kw(\"keyword c\");\nvar operator = kw(\"operator\"), atom = {type: \"atom\", style: \"atom\"}, attribute = {type:\"attribute\", style: \"attribute\"};\nvar type = kw(\"typedef\");\nvar keywords = {\n  \"if\": A, \"while\": A, \"else\": B, \"do\": B, \"try\": B,\n  \"return\": C, \"break\": C, \"continue\": C, \"new\": C, \"throw\": C,\n  \"var\": kw(\"var\"), \"inline\":attribute, \"static\": attribute, \"using\":kw(\"import\"),\n  \"public\": attribute, \"private\": attribute, \"cast\": kw(\"cast\"), \"import\": kw(\"import\"), \"macro\": kw(\"macro\"),\n  \"function\": kw(\"function\"), \"catch\": kw(\"catch\"), \"untyped\": kw(\"untyped\"), \"callback\": kw(\"cb\"),\n  \"for\": kw(\"for\"), \"switch\": kw(\"switch\"), \"case\": kw(\"case\"), \"default\": kw(\"default\"),\n  \"in\": operator, \"never\": kw(\"property_access\"), \"trace\":kw(\"trace\"),\n  \"class\": type, \"abstract\":type, \"enum\":type, \"interface\":type, \"typedef\":type, \"extends\":type, \"implements\":type, \"dynamic\":type,\n  \"true\": atom, \"false\": atom, \"null\": atom\n};\n\nvar isOperatorChar = /[+\\-*&%=<>!?|]/;\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\n\nfunction toUnescaped(stream, end) {\n  var escaped = false, next;\n  while ((next = stream.next()) != null) {\n    if (next == end && !escaped)\n      return true;\n    escaped = !escaped && next == \"\\\\\";\n  }\n}\n\n// Used as scratch variables to communicate multiple values without\n// consing up tons of objects.\nvar type, content;\nfunction ret(tp, style, cont) {\n  type = tp; content = cont;\n  return style;\n}\n\nfunction haxeTokenBase(stream, state) {\n  var ch = stream.next();\n  if (ch == '\"' || ch == \"'\") {\n    return chain(stream, state, haxeTokenString(ch));\n  } else if (/[\\[\\]{}\\(\\),;\\:\\.]/.test(ch)) {\n    return ret(ch);\n  } else if (ch == \"0\" && stream.eat(/x/i)) {\n    stream.eatWhile(/[\\da-f]/i);\n    return ret(\"number\", \"number\");\n  } else if (/\\d/.test(ch) || ch == \"-\" && stream.eat(/\\d/)) {\n    stream.match(/^\\d*(?:\\.\\d*(?!\\.))?(?:[eE][+\\-]?\\d+)?/);\n    return ret(\"number\", \"number\");\n  } else if (state.reAllowed && (ch == \"~\" && stream.eat(/\\//))) {\n    toUnescaped(stream, \"/\");\n    stream.eatWhile(/[gimsu]/);\n    return ret(\"regexp\", \"string.special\");\n  } else if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      return chain(stream, state, haxeTokenComment);\n    } else if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return ret(\"comment\", \"comment\");\n    } else {\n      stream.eatWhile(isOperatorChar);\n      return ret(\"operator\", null, stream.current());\n    }\n  } else if (ch == \"#\") {\n    stream.skipToEnd();\n    return ret(\"conditional\", \"meta\");\n  } else if (ch == \"@\") {\n    stream.eat(/:/);\n    stream.eatWhile(/[\\w_]/);\n    return ret (\"metadata\", \"meta\");\n  } else if (isOperatorChar.test(ch)) {\n    stream.eatWhile(isOperatorChar);\n    return ret(\"operator\", null, stream.current());\n  } else {\n    var word;\n    if(/[A-Z]/.test(ch)) {\n      stream.eatWhile(/[\\w_<>]/);\n      word = stream.current();\n      return ret(\"type\", \"type\", word);\n    } else {\n      stream.eatWhile(/[\\w_]/);\n      var word = stream.current(), known = keywords.propertyIsEnumerable(word) && keywords[word];\n      return (known && state.kwAllowed) ? ret(known.type, known.style, word) :\n        ret(\"variable\", \"variable\", word);\n    }\n  }\n}\n\nfunction haxeTokenString(quote) {\n  return function(stream, state) {\n    if (toUnescaped(stream, quote))\n      state.tokenize = haxeTokenBase;\n    return ret(\"string\", \"string\");\n  };\n}\n\nfunction haxeTokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = haxeTokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return ret(\"comment\", \"comment\");\n}\n\n// Parser\n\nvar atomicTypes = {\"atom\": true, \"number\": true, \"variable\": true, \"string\": true, \"regexp\": true};\n\nfunction HaxeLexical(indented, column, type, align, prev, info) {\n  this.indented = indented;\n  this.column = column;\n  this.type = type;\n  this.prev = prev;\n  this.info = info;\n  if (align != null) this.align = align;\n}\n\nfunction inScope(state, varname) {\n  for (var v = state.localVars; v; v = v.next)\n    if (v.name == varname) return true;\n}\n\nfunction parseHaxe(state, style, type, content, stream) {\n  var cc = state.cc;\n  // Communicate our context to the combinators.\n  // (Less wasteful than consing up a hundred closures on every call.)\n  cx.state = state; cx.stream = stream; cx.marked = null, cx.cc = cc;\n\n  if (!state.lexical.hasOwnProperty(\"align\"))\n    state.lexical.align = true;\n\n  while(true) {\n    var combinator = cc.length ? cc.pop() : statement;\n    if (combinator(type, content)) {\n      while(cc.length && cc[cc.length - 1].lex)\n        cc.pop()();\n      if (cx.marked) return cx.marked;\n      if (type == \"variable\" && inScope(state, content)) return \"variableName.local\";\n      if (type == \"variable\" && imported(state, content)) return \"variableName.special\";\n      return style;\n    }\n  }\n}\n\nfunction imported(state, typename) {\n  if (/[a-z]/.test(typename.charAt(0)))\n    return false;\n  var len = state.importedtypes.length;\n  for (var i = 0; i<len; i++)\n    if(state.importedtypes[i]==typename) return true;\n}\n\nfunction registerimport(importname) {\n  var state = cx.state;\n  for (var t = state.importedtypes; t; t = t.next)\n    if(t.name == importname) return;\n  state.importedtypes = { name: importname, next: state.importedtypes };\n}\n// Combinator utils\n\nvar cx = {state: null, column: null, marked: null, cc: null};\nfunction pass() {\n  for (var i = arguments.length - 1; i >= 0; i--) cx.cc.push(arguments[i]);\n}\nfunction cont() {\n  pass.apply(null, arguments);\n  return true;\n}\nfunction inList(name, list) {\n  for (var v = list; v; v = v.next)\n    if (v.name == name) return true;\n  return false;\n}\nfunction register(varname) {\n  var state = cx.state;\n  if (state.context) {\n    cx.marked = \"def\";\n    if (inList(varname, state.localVars)) return;\n    state.localVars = {name: varname, next: state.localVars};\n  } else if (state.globalVars) {\n    if (inList(varname, state.globalVars)) return;\n    state.globalVars = {name: varname, next: state.globalVars};\n  }\n}\n\n// Combinators\n\nvar defaultVars = {name: \"this\", next: null};\nfunction pushcontext() {\n  if (!cx.state.context) cx.state.localVars = defaultVars;\n  cx.state.context = {prev: cx.state.context, vars: cx.state.localVars};\n}\nfunction popcontext() {\n  cx.state.localVars = cx.state.context.vars;\n  cx.state.context = cx.state.context.prev;\n}\npopcontext.lex = true;\nfunction pushlex(type, info) {\n  var result = function() {\n    var state = cx.state;\n    state.lexical = new HaxeLexical(state.indented, cx.stream.column(), type, null, state.lexical, info);\n  };\n  result.lex = true;\n  return result;\n}\nfunction poplex() {\n  var state = cx.state;\n  if (state.lexical.prev) {\n    if (state.lexical.type == \")\")\n      state.indented = state.lexical.indented;\n    state.lexical = state.lexical.prev;\n  }\n}\npoplex.lex = true;\n\nfunction expect(wanted) {\n  function f(type) {\n    if (type == wanted) return cont();\n    else if (wanted == \";\") return pass();\n    else return cont(f);\n  }\n  return f;\n}\n\nfunction statement(type) {\n  if (type == \"@\") return cont(metadef);\n  if (type == \"var\") return cont(pushlex(\"vardef\"), vardef1, expect(\";\"), poplex);\n  if (type == \"keyword a\") return cont(pushlex(\"form\"), expression, statement, poplex);\n  if (type == \"keyword b\") return cont(pushlex(\"form\"), statement, poplex);\n  if (type == \"{\") return cont(pushlex(\"}\"), pushcontext, block, poplex, popcontext);\n  if (type == \";\") return cont();\n  if (type == \"attribute\") return cont(maybeattribute);\n  if (type == \"function\") return cont(functiondef);\n  if (type == \"for\") return cont(pushlex(\"form\"), expect(\"(\"), pushlex(\")\"), forspec1, expect(\")\"),\n                                 poplex, statement, poplex);\n  if (type == \"variable\") return cont(pushlex(\"stat\"), maybelabel);\n  if (type == \"switch\") return cont(pushlex(\"form\"), expression, pushlex(\"}\", \"switch\"), expect(\"{\"),\n                                    block, poplex, poplex);\n  if (type == \"case\") return cont(expression, expect(\":\"));\n  if (type == \"default\") return cont(expect(\":\"));\n  if (type == \"catch\") return cont(pushlex(\"form\"), pushcontext, expect(\"(\"), funarg, expect(\")\"),\n                                   statement, poplex, popcontext);\n  if (type == \"import\") return cont(importdef, expect(\";\"));\n  if (type == \"typedef\") return cont(typedef);\n  return pass(pushlex(\"stat\"), expression, expect(\";\"), poplex);\n}\nfunction expression(type) {\n  if (atomicTypes.hasOwnProperty(type)) return cont(maybeoperator);\n  if (type == \"type\" ) return cont(maybeoperator);\n  if (type == \"function\") return cont(functiondef);\n  if (type == \"keyword c\") return cont(maybeexpression);\n  if (type == \"(\") return cont(pushlex(\")\"), maybeexpression, expect(\")\"), poplex, maybeoperator);\n  if (type == \"operator\") return cont(expression);\n  if (type == \"[\") return cont(pushlex(\"]\"), commasep(maybeexpression, \"]\"), poplex, maybeoperator);\n  if (type == \"{\") return cont(pushlex(\"}\"), commasep(objprop, \"}\"), poplex, maybeoperator);\n  return cont();\n}\nfunction maybeexpression(type) {\n  if (type.match(/[;\\}\\)\\],]/)) return pass();\n  return pass(expression);\n}\n\nfunction maybeoperator(type, value) {\n  if (type == \"operator\" && /\\+\\+|--/.test(value)) return cont(maybeoperator);\n  if (type == \"operator\" || type == \":\") return cont(expression);\n  if (type == \";\") return;\n  if (type == \"(\") return cont(pushlex(\")\"), commasep(expression, \")\"), poplex, maybeoperator);\n  if (type == \".\") return cont(property, maybeoperator);\n  if (type == \"[\") return cont(pushlex(\"]\"), expression, expect(\"]\"), poplex, maybeoperator);\n}\n\nfunction maybeattribute(type) {\n  if (type == \"attribute\") return cont(maybeattribute);\n  if (type == \"function\") return cont(functiondef);\n  if (type == \"var\") return cont(vardef1);\n}\n\nfunction metadef(type) {\n  if(type == \":\") return cont(metadef);\n  if(type == \"variable\") return cont(metadef);\n  if(type == \"(\") return cont(pushlex(\")\"), commasep(metaargs, \")\"), poplex, statement);\n}\nfunction metaargs(type) {\n  if(type == \"variable\") return cont();\n}\n\nfunction importdef (type, value) {\n  if(type == \"variable\" && /[A-Z]/.test(value.charAt(0))) { registerimport(value); return cont(); }\n  else if(type == \"variable\" || type == \"property\" || type == \".\" || value == \"*\") return cont(importdef);\n}\n\nfunction typedef (type, value)\n{\n  if(type == \"variable\" && /[A-Z]/.test(value.charAt(0))) { registerimport(value); return cont(); }\n  else if (type == \"type\" && /[A-Z]/.test(value.charAt(0))) { return cont(); }\n}\n\nfunction maybelabel(type) {\n  if (type == \":\") return cont(poplex, statement);\n  return pass(maybeoperator, expect(\";\"), poplex);\n}\nfunction property(type) {\n  if (type == \"variable\") {cx.marked = \"property\"; return cont();}\n}\nfunction objprop(type) {\n  if (type == \"variable\") cx.marked = \"property\";\n  if (atomicTypes.hasOwnProperty(type)) return cont(expect(\":\"), expression);\n}\nfunction commasep(what, end) {\n  function proceed(type) {\n    if (type == \",\") return cont(what, proceed);\n    if (type == end) return cont();\n    return cont(expect(end));\n  }\n  return function(type) {\n    if (type == end) return cont();\n    else return pass(what, proceed);\n  };\n}\nfunction block(type) {\n  if (type == \"}\") return cont();\n  return pass(statement, block);\n}\nfunction vardef1(type, value) {\n  if (type == \"variable\"){register(value); return cont(typeuse, vardef2);}\n  return cont();\n}\nfunction vardef2(type, value) {\n  if (value == \"=\") return cont(expression, vardef2);\n  if (type == \",\") return cont(vardef1);\n}\nfunction forspec1(type, value) {\n  if (type == \"variable\") {\n    register(value);\n    return cont(forin, expression)\n  } else {\n    return pass()\n  }\n}\nfunction forin(_type, value) {\n  if (value == \"in\") return cont();\n}\nfunction functiondef(type, value) {\n  //function names starting with upper-case letters are recognised as types, so cludging them together here.\n  if (type == \"variable\" || type == \"type\") {register(value); return cont(functiondef);}\n  if (value == \"new\") return cont(functiondef);\n  if (type == \"(\") return cont(pushlex(\")\"), pushcontext, commasep(funarg, \")\"), poplex, typeuse, statement, popcontext);\n}\nfunction typeuse(type) {\n  if(type == \":\") return cont(typestring);\n}\nfunction typestring(type) {\n  if(type == \"type\") return cont();\n  if(type == \"variable\") return cont();\n  if(type == \"{\") return cont(pushlex(\"}\"), commasep(typeprop, \"}\"), poplex);\n}\nfunction typeprop(type) {\n  if(type == \"variable\") return cont(typeuse);\n}\nfunction funarg(type, value) {\n  if (type == \"variable\") {register(value); return cont(typeuse);}\n}\n\n// Interface\nexport const haxe = {\n  name: \"haxe\",\n  startState: function(indentUnit) {\n    var defaulttypes = [\"Int\", \"Float\", \"String\", \"Void\", \"Std\", \"Bool\", \"Dynamic\", \"Array\"];\n    var state = {\n      tokenize: haxeTokenBase,\n      reAllowed: true,\n      kwAllowed: true,\n      cc: [],\n      lexical: new HaxeLexical(-indentUnit, 0, \"block\", false),\n      importedtypes: defaulttypes,\n      context: null,\n      indented: 0\n    };\n    return state;\n  },\n\n  token: function(stream, state) {\n    if (stream.sol()) {\n      if (!state.lexical.hasOwnProperty(\"align\"))\n        state.lexical.align = false;\n      state.indented = stream.indentation();\n    }\n    if (stream.eatSpace()) return null;\n    var style = state.tokenize(stream, state);\n    if (type == \"comment\") return style;\n    state.reAllowed = !!(type == \"operator\" || type == \"keyword c\" || type.match(/^[\\[{}\\(,;:]$/));\n    state.kwAllowed = type != '.';\n    return parseHaxe(state, style, type, content, stream);\n  },\n\n  indent: function(state, textAfter, cx) {\n    if (state.tokenize != haxeTokenBase) return 0;\n    var firstChar = textAfter && textAfter.charAt(0), lexical = state.lexical;\n    if (lexical.type == \"stat\" && firstChar == \"}\") lexical = lexical.prev;\n    var type = lexical.type, closing = firstChar == type;\n    if (type == \"vardef\") return lexical.indented + 4;\n    else if (type == \"form\" && firstChar == \"{\") return lexical.indented;\n    else if (type == \"stat\" || type == \"form\") return lexical.indented + cx.unit;\n    else if (lexical.info == \"switch\" && !closing)\n      return lexical.indented + (/^(?:case|default)\\b/.test(textAfter) ? cx.unit : 2 * cx.unit);\n    else if (lexical.align) return lexical.column + (closing ? 0 : 1);\n    else return lexical.indented + (closing ? 0 : cx.unit);\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*[{}]$/,\n    commentTokens: {line: \"//\", block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n\nexport const hxml = {\n  name: \"hxml\",\n  startState: function () {\n    return {\n      define: false,\n      inString: false\n    };\n  },\n  token: function (stream, state) {\n    var ch = stream.peek();\n    var sol = stream.sol();\n\n    ///* comments */\n    if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    if (sol && ch == \"-\") {\n      var style = \"variable-2\";\n\n      stream.eat(/-/);\n\n      if (stream.peek() == \"-\") {\n        stream.eat(/-/);\n        style = \"keyword a\";\n      }\n\n      if (stream.peek() == \"D\") {\n        stream.eat(/[D]/);\n        style = \"keyword c\";\n        state.define = true;\n      }\n\n      stream.eatWhile(/[A-Z]/i);\n      return style;\n    }\n\n    var ch = stream.peek();\n\n    if (state.inString == false && ch == \"'\") {\n      state.inString = true;\n      stream.next();\n    }\n\n    if (state.inString == true) {\n      if (stream.skipTo(\"'\")) {\n\n      } else {\n        stream.skipToEnd();\n      }\n\n      if (stream.peek() == \"'\") {\n        stream.next();\n        state.inString = false;\n      }\n\n      return \"string\";\n    }\n\n    stream.next();\n    return null;\n  },\n  languageData: {\n    commentTokens: {line: \"#\"}\n  }\n}\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}