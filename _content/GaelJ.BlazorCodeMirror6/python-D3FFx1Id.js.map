{"version":3,"file":"python-D3FFx1Id.js","sources":["../NodeLib/node_modules/@codemirror/legacy-modes/mode/python.js"],"sourcesContent":["function wordRegexp(words) {\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n}\n\nvar wordOperators = wordRegexp([\"and\", \"or\", \"not\", \"is\"]);\nvar commonKeywords = [\"as\", \"assert\", \"break\", \"class\", \"continue\",\n                      \"def\", \"del\", \"elif\", \"else\", \"except\", \"finally\",\n                      \"for\", \"from\", \"global\", \"if\", \"import\",\n                      \"lambda\", \"pass\", \"raise\", \"return\",\n                      \"try\", \"while\", \"with\", \"yield\", \"in\", \"False\", \"True\"];\nvar commonBuiltins = [\"abs\", \"all\", \"any\", \"bin\", \"bool\", \"bytearray\", \"callable\", \"chr\",\n                      \"classmethod\", \"compile\", \"complex\", \"delattr\", \"dict\", \"dir\", \"divmod\",\n                      \"enumerate\", \"eval\", \"filter\", \"float\", \"format\", \"frozenset\",\n                      \"getattr\", \"globals\", \"hasattr\", \"hash\", \"help\", \"hex\", \"id\",\n                      \"input\", \"int\", \"isinstance\", \"issubclass\", \"iter\", \"len\",\n                      \"list\", \"locals\", \"map\", \"max\", \"memoryview\", \"min\", \"next\",\n                      \"object\", \"oct\", \"open\", \"ord\", \"pow\", \"property\", \"range\",\n                      \"repr\", \"reversed\", \"round\", \"set\", \"setattr\", \"slice\",\n                      \"sorted\", \"staticmethod\", \"str\", \"sum\", \"super\", \"tuple\",\n                      \"type\", \"vars\", \"zip\", \"__import__\", \"NotImplemented\",\n                      \"Ellipsis\", \"__debug__\"];\n\nfunction top(state) {\n  return state.scopes[state.scopes.length - 1];\n}\n\nexport function mkPython(parserConf) {\n  var ERRORCLASS = \"error\";\n\n  var delimiters = parserConf.delimiters || parserConf.singleDelimiters || /^[\\(\\)\\[\\]\\{\\}@,:`=;\\.\\\\]/;\n  //               (Backwards-compatibility with old, cumbersome config system)\n  var operators = [parserConf.singleOperators, parserConf.doubleOperators, parserConf.doubleDelimiters, parserConf.tripleDelimiters,\n                   parserConf.operators || /^([-+*/%\\/&|^]=?|[<>=]+|\\/\\/=?|\\*\\*=?|!=|[~!@]|\\.\\.\\.)/]\n  for (var i = 0; i < operators.length; i++) if (!operators[i]) operators.splice(i--, 1)\n\n  var hangingIndent = parserConf.hangingIndent;\n\n  var myKeywords = commonKeywords, myBuiltins = commonBuiltins;\n  if (parserConf.extra_keywords != undefined)\n    myKeywords = myKeywords.concat(parserConf.extra_keywords);\n\n  if (parserConf.extra_builtins != undefined)\n    myBuiltins = myBuiltins.concat(parserConf.extra_builtins);\n\n  var py3 = !(parserConf.version && Number(parserConf.version) < 3)\n  if (py3) {\n    // since http://legacy.python.org/dev/peps/pep-0465/ @ is also an operator\n    var identifiers = parserConf.identifiers|| /^[_A-Za-z\\u00A1-\\uFFFF][_A-Za-z0-9\\u00A1-\\uFFFF]*/;\n    myKeywords = myKeywords.concat([\"nonlocal\", \"None\", \"aiter\", \"anext\", \"async\", \"await\", \"breakpoint\", \"match\", \"case\"]);\n    myBuiltins = myBuiltins.concat([\"ascii\", \"bytes\", \"exec\", \"print\"]);\n    var stringPrefixes = new RegExp(\"^(([rbuf]|(br)|(rb)|(fr)|(rf))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n  } else {\n    var identifiers = parserConf.identifiers|| /^[_A-Za-z][_A-Za-z0-9]*/;\n    myKeywords = myKeywords.concat([\"exec\", \"print\"]);\n    myBuiltins = myBuiltins.concat([\"apply\", \"basestring\", \"buffer\", \"cmp\", \"coerce\", \"execfile\",\n                                    \"file\", \"intern\", \"long\", \"raw_input\", \"reduce\", \"reload\",\n                                    \"unichr\", \"unicode\", \"xrange\", \"None\"]);\n    var stringPrefixes = new RegExp(\"^(([rubf]|(ur)|(br))?('{3}|\\\"{3}|['\\\"]))\", \"i\");\n  }\n  var keywords = wordRegexp(myKeywords);\n  var builtins = wordRegexp(myBuiltins);\n\n  // tokenizers\n  function tokenBase(stream, state) {\n    var sol = stream.sol() && state.lastToken != \"\\\\\"\n    if (sol) state.indent = stream.indentation()\n    // Handle scope changes\n    if (sol && top(state).type == \"py\") {\n      var scopeOffset = top(state).offset;\n      if (stream.eatSpace()) {\n        var lineOffset = stream.indentation();\n        if (lineOffset > scopeOffset)\n          pushPyScope(stream, state);\n        else if (lineOffset < scopeOffset && dedent(stream, state) && stream.peek() != \"#\")\n          state.errorToken = true;\n        return null;\n      } else {\n        var style = tokenBaseInner(stream, state);\n        if (scopeOffset > 0 && dedent(stream, state))\n          style += \" \" + ERRORCLASS;\n        return style;\n      }\n    }\n    return tokenBaseInner(stream, state);\n  }\n\n  function tokenBaseInner(stream, state, inFormat) {\n    if (stream.eatSpace()) return null;\n\n    // Handle Comments\n    if (!inFormat && stream.match(/^#.*/)) return \"comment\";\n\n    // Handle Number Literals\n    if (stream.match(/^[0-9\\.]/, false)) {\n      var floatLiteral = false;\n      // Floats\n      if (stream.match(/^[\\d_]*\\.\\d+(e[\\+\\-]?\\d+)?/i)) { floatLiteral = true; }\n      if (stream.match(/^[\\d_]+\\.\\d*/)) { floatLiteral = true; }\n      if (stream.match(/^\\.\\d+/)) { floatLiteral = true; }\n      if (floatLiteral) {\n        // Float literals may be \"imaginary\"\n        stream.eat(/J/i);\n        return \"number\";\n      }\n      // Integers\n      var intLiteral = false;\n      // Hex\n      if (stream.match(/^0x[0-9a-f_]+/i)) intLiteral = true;\n      // Binary\n      if (stream.match(/^0b[01_]+/i)) intLiteral = true;\n      // Octal\n      if (stream.match(/^0o[0-7_]+/i)) intLiteral = true;\n      // Decimal\n      if (stream.match(/^[1-9][\\d_]*(e[\\+\\-]?[\\d_]+)?/)) {\n        // Decimal literals may be \"imaginary\"\n        stream.eat(/J/i);\n        // TODO - Can you have imaginary longs?\n        intLiteral = true;\n      }\n      // Zero by itself with no other piece of number.\n      if (stream.match(/^0(?![\\dx])/i)) intLiteral = true;\n      if (intLiteral) {\n        // Integer literals may be \"long\"\n        stream.eat(/L/i);\n        return \"number\";\n      }\n    }\n\n    // Handle Strings\n    if (stream.match(stringPrefixes)) {\n      var isFmtString = stream.current().toLowerCase().indexOf('f') !== -1;\n      if (!isFmtString) {\n        state.tokenize = tokenStringFactory(stream.current(), state.tokenize);\n        return state.tokenize(stream, state);\n      } else {\n        state.tokenize = formatStringFactory(stream.current(), state.tokenize);\n        return state.tokenize(stream, state);\n      }\n    }\n\n    for (var i = 0; i < operators.length; i++)\n      if (stream.match(operators[i])) return \"operator\"\n\n    if (stream.match(delimiters)) return \"punctuation\";\n\n    if (state.lastToken == \".\" && stream.match(identifiers))\n      return \"property\";\n\n    if (stream.match(keywords) || stream.match(wordOperators))\n      return \"keyword\";\n\n    if (stream.match(builtins))\n      return \"builtin\";\n\n    if (stream.match(/^(self|cls)\\b/))\n      return \"self\";\n\n    if (stream.match(identifiers)) {\n      if (state.lastToken == \"def\" || state.lastToken == \"class\")\n        return \"def\";\n      return \"variable\";\n    }\n\n    // Handle non-detected items\n    stream.next();\n    return inFormat ? null :ERRORCLASS;\n  }\n\n  function formatStringFactory(delimiter, tokenOuter) {\n    while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n      delimiter = delimiter.substr(1);\n\n    var singleline = delimiter.length == 1;\n    var OUTCLASS = \"string\";\n\n    function tokenNestedExpr(depth) {\n      return function(stream, state) {\n        var inner = tokenBaseInner(stream, state, true)\n        if (inner == \"punctuation\") {\n          if (stream.current() == \"{\") {\n            state.tokenize = tokenNestedExpr(depth + 1)\n          } else if (stream.current() == \"}\") {\n            if (depth > 1) state.tokenize = tokenNestedExpr(depth - 1)\n            else state.tokenize = tokenString\n          }\n        }\n        return inner\n      }\n    }\n\n    function tokenString(stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^'\"\\{\\}\\\\]/);\n        if (stream.eat(\"\\\\\")) {\n          stream.next();\n          if (singleline && stream.eol())\n            return OUTCLASS;\n        } else if (stream.match(delimiter)) {\n          state.tokenize = tokenOuter;\n          return OUTCLASS;\n        } else if (stream.match('{{')) {\n          // ignore {{ in f-str\n          return OUTCLASS;\n        } else if (stream.match('{', false)) {\n          // switch to nested mode\n          state.tokenize = tokenNestedExpr(0)\n          if (stream.current()) return OUTCLASS;\n          else return state.tokenize(stream, state)\n        } else if (stream.match('}}')) {\n          return OUTCLASS;\n        } else if (stream.match('}')) {\n          // single } in f-string is an error\n          return ERRORCLASS;\n        } else {\n          stream.eat(/['\"]/);\n        }\n      }\n      if (singleline) {\n        if (parserConf.singleLineStringErrors)\n          return ERRORCLASS;\n        else\n          state.tokenize = tokenOuter;\n      }\n      return OUTCLASS;\n    }\n    tokenString.isString = true;\n    return tokenString;\n  }\n\n  function tokenStringFactory(delimiter, tokenOuter) {\n    while (\"rubf\".indexOf(delimiter.charAt(0).toLowerCase()) >= 0)\n      delimiter = delimiter.substr(1);\n\n    var singleline = delimiter.length == 1;\n    var OUTCLASS = \"string\";\n\n    function tokenString(stream, state) {\n      while (!stream.eol()) {\n        stream.eatWhile(/[^'\"\\\\]/);\n        if (stream.eat(\"\\\\\")) {\n          stream.next();\n          if (singleline && stream.eol())\n            return OUTCLASS;\n        } else if (stream.match(delimiter)) {\n          state.tokenize = tokenOuter;\n          return OUTCLASS;\n        } else {\n          stream.eat(/['\"]/);\n        }\n      }\n      if (singleline) {\n        if (parserConf.singleLineStringErrors)\n          return ERRORCLASS;\n        else\n          state.tokenize = tokenOuter;\n      }\n      return OUTCLASS;\n    }\n    tokenString.isString = true;\n    return tokenString;\n  }\n\n  function pushPyScope(stream, state) {\n    while (top(state).type != \"py\") state.scopes.pop()\n    state.scopes.push({offset: top(state).offset + stream.indentUnit,\n                       type: \"py\",\n                       align: null})\n  }\n\n  function pushBracketScope(stream, state, type) {\n    var align = stream.match(/^[\\s\\[\\{\\(]*(?:#|$)/, false) ? null : stream.column() + 1\n    state.scopes.push({offset: state.indent + (hangingIndent || stream.indentUnit),\n                       type: type,\n                       align: align})\n  }\n\n  function dedent(stream, state) {\n    var indented = stream.indentation();\n    while (state.scopes.length > 1 && top(state).offset > indented) {\n      if (top(state).type != \"py\") return true;\n      state.scopes.pop();\n    }\n    return top(state).offset != indented;\n  }\n\n  function tokenLexer(stream, state) {\n    if (stream.sol()) {\n      state.beginningOfLine = true;\n      state.dedent = false;\n    }\n\n    var style = state.tokenize(stream, state);\n    var current = stream.current();\n\n    // Handle decorators\n    if (state.beginningOfLine && current == \"@\")\n      return stream.match(identifiers, false) ? \"meta\" : py3 ? \"operator\" : ERRORCLASS;\n\n    if (/\\S/.test(current)) state.beginningOfLine = false;\n\n    if ((style == \"variable\" || style == \"builtin\")\n        && state.lastToken == \"meta\")\n      style = \"meta\";\n\n    // Handle scope changes.\n    if (current == \"pass\" || current == \"return\")\n      state.dedent = true;\n\n    if (current == \"lambda\") state.lambda = true;\n    if (current == \":\" && !state.lambda && top(state).type == \"py\" && stream.match(/^\\s*(?:#|$)/, false))\n      pushPyScope(stream, state);\n\n    if (current.length == 1 && !/string|comment/.test(style)) {\n      var delimiter_index = \"[({\".indexOf(current);\n      if (delimiter_index != -1)\n        pushBracketScope(stream, state, \"])}\".slice(delimiter_index, delimiter_index+1));\n\n      delimiter_index = \"])}\".indexOf(current);\n      if (delimiter_index != -1) {\n        if (top(state).type == current) state.indent = state.scopes.pop().offset - (hangingIndent || stream.indentUnit)\n        else return ERRORCLASS;\n      }\n    }\n    if (state.dedent && stream.eol() && top(state).type == \"py\" && state.scopes.length > 1)\n      state.scopes.pop();\n\n    return style;\n  }\n\n  return {\n    name: \"python\",\n\n    startState: function() {\n      return {\n        tokenize: tokenBase,\n        scopes: [{offset: 0, type: \"py\", align: null}],\n        indent: 0,\n        lastToken: null,\n        lambda: false,\n        dedent: 0\n      };\n    },\n\n    token: function(stream, state) {\n      var addErr = state.errorToken;\n      if (addErr) state.errorToken = false;\n      var style = tokenLexer(stream, state);\n\n      if (style && style != \"comment\")\n        state.lastToken = (style == \"keyword\" || style == \"punctuation\") ? stream.current() : style;\n      if (style == \"punctuation\") style = null;\n\n      if (stream.eol() && state.lambda)\n        state.lambda = false;\n      return addErr ? ERRORCLASS : style;\n    },\n\n    indent: function(state, textAfter, cx) {\n      if (state.tokenize != tokenBase)\n        return state.tokenize.isString ? null : 0;\n\n      var scope = top(state)\n      var closing = scope.type == textAfter.charAt(0) ||\n          scope.type == \"py\" && !state.dedent && /^(else:|elif |except |finally:)/.test(textAfter)\n      if (scope.align != null)\n        return scope.align - (closing ? 1 : 0)\n      else\n        return scope.offset - (closing ? hangingIndent || cx.unit : 0)\n    },\n\n    languageData: {\n      autocomplete: commonKeywords.concat(commonBuiltins).concat([\"exec\", \"print\"]),\n      indentOnInput: /^\\s*([\\}\\]\\)]|else:|elif |except |finally:)$/,\n      commentTokens: {line: \"#\"},\n      closeBrackets: {brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"'''\", '\"\"\"']}\n    }\n  };\n};\n\nvar words = function(str) { return str.split(\" \"); };\n\nexport const python = mkPython({})\n\nexport const cython = mkPython({\n  extra_keywords: words(\"by cdef cimport cpdef ctypedef enum except \"+\n                        \"extern gil include nogil property public \"+\n                        \"readonly struct union DEF IF ELIF ELSE\")\n})\n"],"names":[],"mappings":"AAAA,SAAS,UAAU,CAAC,KAAK,EAAE;AAC3B,EAAE,OAAO,IAAI,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,CAAC;AACzD,CAAC;AACD;AACA,IAAI,aAAa,GAAG,UAAU,CAAC,CAAC,KAAK,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC;AAC3D,IAAI,cAAc,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,UAAU;AAClE,sBAAsB,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,SAAS;AACvE,sBAAsB,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ;AAC7D,sBAAsB,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ;AACzD,sBAAsB,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;AAC9E,IAAI,cAAc,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,UAAU,EAAE,KAAK;AACxF,sBAAsB,aAAa,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ;AAC7F,sBAAsB,WAAW,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW;AACnF,sBAAsB,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI;AAClF,sBAAsB,OAAO,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,EAAE,KAAK;AAC/E,sBAAsB,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,YAAY,EAAE,KAAK,EAAE,MAAM;AACjF,sBAAsB,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,EAAE,OAAO;AAChF,sBAAsB,MAAM,EAAE,UAAU,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE,OAAO;AAC5E,sBAAsB,QAAQ,EAAE,cAAc,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO;AAC9E,sBAAsB,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,YAAY,EAAE,gBAAgB;AAC3E,sBAAsB,UAAU,EAAE,WAAW,CAAC,CAAC;AAC/C;AACA,SAAS,GAAG,CAAC,KAAK,EAAE;AACpB,EAAE,OAAO,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;AAC/C,CAAC;AACD;AACO,SAAS,QAAQ,CAAC,UAAU,EAAE;AACrC,EAAE,IAAI,UAAU,GAAG,OAAO,CAAC;AAC3B;AACA,EAAE,IAAI,UAAU,GAAG,UAAU,CAAC,UAAU,IAAI,UAAU,CAAC,gBAAgB,IAAI,2BAA2B,CAAC;AACvG;AACA,EAAE,IAAI,SAAS,GAAG,CAAC,UAAU,CAAC,eAAe,EAAE,UAAU,CAAC,eAAe,EAAE,UAAU,CAAC,gBAAgB,EAAE,UAAU,CAAC,gBAAgB;AACnI,mBAAmB,UAAU,CAAC,SAAS,IAAI,wDAAwD,EAAC;AACpG,EAAE,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,EAAE,CAAC,EAAC;AACxF;AACA,EAAE,IAAI,aAAa,GAAG,UAAU,CAAC,aAAa,CAAC;AAC/C;AACA,EAAE,IAAI,UAAU,GAAG,cAAc,EAAE,UAAU,GAAG,cAAc,CAAC;AAC/D,EAAE,IAAI,UAAU,CAAC,cAAc,IAAI,SAAS;AAC5C,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AAC9D;AACA,EAAE,IAAI,UAAU,CAAC,cAAc,IAAI,SAAS;AAC5C,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AAC9D;AACA,EAAE,IAAI,GAAG,GAAG,EAAE,UAAU,CAAC,OAAO,IAAI,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,EAAC;AACnE,EAAE,IAAI,GAAG,EAAE;AACX;AACA,IAAI,IAAI,WAAW,GAAG,UAAU,CAAC,WAAW,GAAG,mDAAmD,CAAC;AACnG,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC,CAAC;AAC5H,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;AACxE,IAAI,IAAI,cAAc,GAAG,IAAI,MAAM,CAAC,oDAAoD,EAAE,GAAG,CAAC,CAAC;AAC/F,GAAG,MAAM;AACT,IAAI,IAAI,WAAW,GAAG,UAAU,CAAC,WAAW,GAAG,yBAAyB,CAAC;AACzE,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;AACtD,IAAI,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,EAAE,YAAY,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,UAAU;AAChG,oCAAoC,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ;AAC7F,oCAAoC,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;AAC5E,IAAI,IAAI,cAAc,GAAG,IAAI,MAAM,CAAC,0CAA0C,EAAE,GAAG,CAAC,CAAC;AACrF,GAAG;AACH,EAAE,IAAI,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;AACxC,EAAE,IAAI,QAAQ,GAAG,UAAU,CAAC,UAAU,CAAC,CAAC;AACxC;AACA;AACA,EAAE,SAAS,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE;AACpC,IAAI,IAAI,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE,IAAI,KAAK,CAAC,SAAS,IAAI,KAAI;AACrD,IAAI,IAAI,GAAG,EAAE,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,WAAW,GAAE;AAChD;AACA,IAAI,IAAI,GAAG,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE;AACxC,MAAM,IAAI,WAAW,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;AAC1C,MAAM,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;AAC7B,QAAQ,IAAI,UAAU,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;AAC9C,QAAQ,IAAI,UAAU,GAAG,WAAW;AACpC,UAAU,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACrC,aAAa,IAAI,UAAU,GAAG,WAAW,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,GAAG;AAC1F,UAAU,KAAK,CAAC,UAAU,GAAG,IAAI,CAAC;AAClC,QAAQ,OAAO,IAAI,CAAC;AACpB,OAAO,MAAM;AACb,QAAQ,IAAI,KAAK,GAAG,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAClD,QAAQ,IAAI,WAAW,GAAG,CAAC,IAAI,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC;AACpD,UAAU,KAAK,IAAI,GAAG,GAAG,UAAU,CAAC;AACpC,QAAQ,OAAO,KAAK,CAAC;AACrB,OAAO;AACP,KAAK;AACL,IAAI,OAAO,cAAc,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACzC,GAAG;AACH;AACA,EAAE,SAAS,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE;AACnD,IAAI,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,OAAO,IAAI,CAAC;AACvC;AACA;AACA,IAAI,IAAI,CAAC,QAAQ,IAAI,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,OAAO,SAAS,CAAC;AAC5D;AACA;AACA,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,EAAE;AACzC,MAAM,IAAI,YAAY,GAAG,KAAK,CAAC;AAC/B;AACA,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,6BAA6B,CAAC,EAAE,EAAE,YAAY,GAAG,IAAI,CAAC,EAAE;AAC/E,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,EAAE,YAAY,GAAG,IAAI,CAAC,EAAE;AAChE,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,EAAE,EAAE,YAAY,GAAG,IAAI,CAAC,EAAE;AAC1D,MAAM,IAAI,YAAY,EAAE;AACxB;AACA,QAAQ,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACzB,QAAQ,OAAO,QAAQ,CAAC;AACxB,OAAO;AACP;AACA,MAAM,IAAI,UAAU,GAAG,KAAK,CAAC;AAC7B;AACA,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,EAAE,UAAU,GAAG,IAAI,CAAC;AAC5D;AACA,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,YAAY,CAAC,EAAE,UAAU,GAAG,IAAI,CAAC;AACxD;AACA,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,EAAE,UAAU,GAAG,IAAI,CAAC;AACzD;AACA,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,+BAA+B,CAAC,EAAE;AACzD;AACA,QAAQ,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACzB;AACA,QAAQ,UAAU,GAAG,IAAI,CAAC;AAC1B,OAAO;AACP;AACA,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE,UAAU,GAAG,IAAI,CAAC;AAC1D,MAAM,IAAI,UAAU,EAAE;AACtB;AACA,QAAQ,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACzB,QAAQ,OAAO,QAAQ,CAAC;AACxB,OAAO;AACP,KAAK;AACL;AACA;AACA,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;AACtC,MAAM,IAAI,WAAW,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC;AAC3E,MAAM,IAAI,CAAC,WAAW,EAAE;AACxB,QAAQ,KAAK,CAAC,QAAQ,GAAG,kBAAkB,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC9E,QAAQ,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC7C,OAAO,MAAM;AACb,QAAQ,KAAK,CAAC,QAAQ,GAAG,mBAAmB,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC/E,QAAQ,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC7C,OAAO;AACP,KAAK;AACL;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE;AAC7C,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,OAAO,UAAU;AACvD;AACA,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,EAAE,OAAO,aAAa,CAAC;AACvD;AACA,IAAI,IAAI,KAAK,CAAC,SAAS,IAAI,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC;AAC3D,MAAM,OAAO,UAAU,CAAC;AACxB;AACA,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC;AAC7D,MAAM,OAAO,SAAS,CAAC;AACvB;AACA,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC;AAC9B,MAAM,OAAO,SAAS,CAAC;AACvB;AACA,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC;AACrC,MAAM,OAAO,MAAM,CAAC;AACpB;AACA,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;AACnC,MAAM,IAAI,KAAK,CAAC,SAAS,IAAI,KAAK,IAAI,KAAK,CAAC,SAAS,IAAI,OAAO;AAChE,QAAQ,OAAO,KAAK,CAAC;AACrB,MAAM,OAAO,UAAU,CAAC;AACxB,KAAK;AACL;AACA;AACA,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;AAClB,IAAI,OAAO,QAAQ,GAAG,IAAI,EAAE,UAAU,CAAC;AACvC,GAAG;AACH;AACA,EAAE,SAAS,mBAAmB,CAAC,SAAS,EAAE,UAAU,EAAE;AACtD,IAAI,OAAO,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC;AACjE,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACtC;AACA,IAAI,IAAI,UAAU,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC;AAC3C,IAAI,IAAI,QAAQ,GAAG,QAAQ,CAAC;AAC5B;AACA,IAAI,SAAS,eAAe,CAAC,KAAK,EAAE;AACpC,MAAM,OAAO,SAAS,MAAM,EAAE,KAAK,EAAE;AACrC,QAAQ,IAAI,KAAK,GAAG,cAAc,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAC;AACvD,QAAQ,IAAI,KAAK,IAAI,aAAa,EAAE;AACpC,UAAU,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,GAAG,EAAE;AACvC,YAAY,KAAK,CAAC,QAAQ,GAAG,eAAe,CAAC,KAAK,GAAG,CAAC,EAAC;AACvD,WAAW,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,GAAG,EAAE;AAC9C,YAAY,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,CAAC,QAAQ,GAAG,eAAe,CAAC,KAAK,GAAG,CAAC,EAAC;AACtE,iBAAiB,KAAK,CAAC,QAAQ,GAAG,YAAW;AAC7C,WAAW;AACX,SAAS;AACT,QAAQ,OAAO,KAAK;AACpB,OAAO;AACP,KAAK;AACL;AACA,IAAI,SAAS,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE;AACxC,MAAM,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE;AAC5B,QAAQ,MAAM,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC;AACvC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AAC9B,UAAU,MAAM,CAAC,IAAI,EAAE,CAAC;AACxB,UAAU,IAAI,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACxC,YAAY,OAAO,QAAQ,CAAC;AAC5B,SAAS,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;AAC5C,UAAU,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;AACtC,UAAU,OAAO,QAAQ,CAAC;AAC1B,SAAS,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AACvC;AACA,UAAU,OAAO,QAAQ,CAAC;AAC1B,SAAS,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,EAAE,KAAK,CAAC,EAAE;AAC7C;AACA,UAAU,KAAK,CAAC,QAAQ,GAAG,eAAe,CAAC,CAAC,EAAC;AAC7C,UAAU,IAAI,MAAM,CAAC,OAAO,EAAE,EAAE,OAAO,QAAQ,CAAC;AAChD,eAAe,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC;AACnD,SAAS,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AACvC,UAAU,OAAO,QAAQ,CAAC;AAC1B,SAAS,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE;AACtC;AACA,UAAU,OAAO,UAAU,CAAC;AAC5B,SAAS,MAAM;AACf,UAAU,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC7B,SAAS;AACT,OAAO;AACP,MAAM,IAAI,UAAU,EAAE;AACtB,QAAQ,IAAI,UAAU,CAAC,sBAAsB;AAC7C,UAAU,OAAO,UAAU,CAAC;AAC5B;AACA,UAAU,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;AACtC,OAAO;AACP,MAAM,OAAO,QAAQ,CAAC;AACtB,KAAK;AACL,IAAI,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;AAChC,IAAI,OAAO,WAAW,CAAC;AACvB,GAAG;AACH;AACA,EAAE,SAAS,kBAAkB,CAAC,SAAS,EAAE,UAAU,EAAE;AACrD,IAAI,OAAO,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC;AACjE,MAAM,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACtC;AACA,IAAI,IAAI,UAAU,GAAG,SAAS,CAAC,MAAM,IAAI,CAAC,CAAC;AAC3C,IAAI,IAAI,QAAQ,GAAG,QAAQ,CAAC;AAC5B;AACA,IAAI,SAAS,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE;AACxC,MAAM,OAAO,CAAC,MAAM,CAAC,GAAG,EAAE,EAAE;AAC5B,QAAQ,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AACnC,QAAQ,IAAI,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;AAC9B,UAAU,MAAM,CAAC,IAAI,EAAE,CAAC;AACxB,UAAU,IAAI,UAAU,IAAI,MAAM,CAAC,GAAG,EAAE;AACxC,YAAY,OAAO,QAAQ,CAAC;AAC5B,SAAS,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,EAAE;AAC5C,UAAU,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;AACtC,UAAU,OAAO,QAAQ,CAAC;AAC1B,SAAS,MAAM;AACf,UAAU,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC7B,SAAS;AACT,OAAO;AACP,MAAM,IAAI,UAAU,EAAE;AACtB,QAAQ,IAAI,UAAU,CAAC,sBAAsB;AAC7C,UAAU,OAAO,UAAU,CAAC;AAC5B;AACA,UAAU,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;AACtC,OAAO;AACP,MAAM,OAAO,QAAQ,CAAC;AACtB,KAAK;AACL,IAAI,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;AAChC,IAAI,OAAO,WAAW,CAAC;AACvB,GAAG;AACH;AACA,EAAE,SAAS,WAAW,CAAC,MAAM,EAAE,KAAK,EAAE;AACtC,IAAI,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,GAAE;AACtD,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU;AACpE,uBAAuB,IAAI,EAAE,IAAI;AACjC,uBAAuB,KAAK,EAAE,IAAI,CAAC,EAAC;AACpC,GAAG;AACH;AACA,EAAE,SAAS,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE;AACjD,IAAI,IAAI,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,GAAG,IAAI,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,EAAC;AACvF,IAAI,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,EAAE,KAAK,CAAC,MAAM,IAAI,aAAa,IAAI,MAAM,CAAC,UAAU,CAAC;AAClF,uBAAuB,IAAI,EAAE,IAAI;AACjC,uBAAuB,KAAK,EAAE,KAAK,CAAC,EAAC;AACrC,GAAG;AACH;AACA,EAAE,SAAS,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE;AACjC,IAAI,IAAI,QAAQ,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;AACxC,IAAI,OAAO,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,QAAQ,EAAE;AACpE,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,IAAI,EAAE,OAAO,IAAI,CAAC;AAC/C,MAAM,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;AACzB,KAAK;AACL,IAAI,OAAO,GAAG,CAAC,KAAK,CAAC,CAAC,MAAM,IAAI,QAAQ,CAAC;AACzC,GAAG;AACH;AACA,EAAE,SAAS,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE;AACrC,IAAI,IAAI,MAAM,CAAC,GAAG,EAAE,EAAE;AACtB,MAAM,KAAK,CAAC,eAAe,GAAG,IAAI,CAAC;AACnC,MAAM,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;AAC3B,KAAK;AACL;AACA,IAAI,IAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC9C,IAAI,IAAI,OAAO,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;AACnC;AACA;AACA,IAAI,IAAI,KAAK,CAAC,eAAe,IAAI,OAAO,IAAI,GAAG;AAC/C,MAAM,OAAO,MAAM,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,GAAG,MAAM,GAAG,GAAG,GAAG,UAAU,GAAG,UAAU,CAAC;AACvF;AACA,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC;AAC1D;AACA,IAAI,IAAI,CAAC,KAAK,IAAI,UAAU,IAAI,KAAK,IAAI,SAAS;AAClD,WAAW,KAAK,CAAC,SAAS,IAAI,MAAM;AACpC,MAAM,KAAK,GAAG,MAAM,CAAC;AACrB;AACA;AACA,IAAI,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,IAAI,QAAQ;AAChD,MAAM,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;AAC1B;AACA,IAAI,IAAI,OAAO,IAAI,QAAQ,EAAE,KAAK,CAAC,MAAM,GAAG,IAAI,CAAC;AACjD,IAAI,IAAI,OAAO,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,CAAC;AACxG,MAAM,WAAW,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACjC;AACA,IAAI,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;AAC9D,MAAM,IAAI,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AACnD,MAAM,IAAI,eAAe,IAAI,CAAC,CAAC;AAC/B,QAAQ,gBAAgB,CAAC,MAAM,EAAE,KAAK,EAAE,KAAK,CAAC,KAAK,CAAC,eAAe,EAAE,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;AACzF;AACA,MAAM,eAAe,GAAG,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;AAC/C,MAAM,IAAI,eAAe,IAAI,CAAC,CAAC,EAAE;AACjC,QAAQ,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,OAAO,EAAE,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,IAAI,aAAa,IAAI,MAAM,CAAC,UAAU,EAAC;AACvH,aAAa,OAAO,UAAU,CAAC;AAC/B,OAAO;AACP,KAAK;AACL,IAAI,IAAI,KAAK,CAAC,MAAM,IAAI,MAAM,CAAC,GAAG,EAAE,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,IAAI,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC;AAC1F,MAAM,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC;AACzB;AACA,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;AACA,EAAE,OAAO;AACT,IAAI,IAAI,EAAE,QAAQ;AAClB;AACA,IAAI,UAAU,EAAE,WAAW;AAC3B,MAAM,OAAO;AACb,QAAQ,QAAQ,EAAE,SAAS;AAC3B,QAAQ,MAAM,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AACtD,QAAQ,MAAM,EAAE,CAAC;AACjB,QAAQ,SAAS,EAAE,IAAI;AACvB,QAAQ,MAAM,EAAE,KAAK;AACrB,QAAQ,MAAM,EAAE,CAAC;AACjB,OAAO,CAAC;AACR,KAAK;AACL;AACA,IAAI,KAAK,EAAE,SAAS,MAAM,EAAE,KAAK,EAAE;AACnC,MAAM,IAAI,MAAM,GAAG,KAAK,CAAC,UAAU,CAAC;AACpC,MAAM,IAAI,MAAM,EAAE,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3C,MAAM,IAAI,KAAK,GAAG,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAC5C;AACA,MAAM,IAAI,KAAK,IAAI,KAAK,IAAI,SAAS;AACrC,QAAQ,KAAK,CAAC,SAAS,GAAG,CAAC,KAAK,IAAI,SAAS,IAAI,KAAK,IAAI,aAAa,IAAI,MAAM,CAAC,OAAO,EAAE,GAAG,KAAK,CAAC;AACpG,MAAM,IAAI,KAAK,IAAI,aAAa,EAAE,KAAK,GAAG,IAAI,CAAC;AAC/C;AACA,MAAM,IAAI,MAAM,CAAC,GAAG,EAAE,IAAI,KAAK,CAAC,MAAM;AACtC,QAAQ,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC;AAC7B,MAAM,OAAO,MAAM,GAAG,UAAU,GAAG,KAAK,CAAC;AACzC,KAAK;AACL;AACA,IAAI,MAAM,EAAE,SAAS,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE;AAC3C,MAAM,IAAI,KAAK,CAAC,QAAQ,IAAI,SAAS;AACrC,QAAQ,OAAO,KAAK,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC;AAClD;AACA,MAAM,IAAI,KAAK,GAAG,GAAG,CAAC,KAAK,EAAC;AAC5B,MAAM,IAAI,OAAO,GAAG,KAAK,CAAC,IAAI,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC;AACrD,UAAU,KAAK,CAAC,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,iCAAiC,CAAC,IAAI,CAAC,SAAS,EAAC;AAClG,MAAM,IAAI,KAAK,CAAC,KAAK,IAAI,IAAI;AAC7B,QAAQ,OAAO,KAAK,CAAC,KAAK,IAAI,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC;AAC9C;AACA,QAAQ,OAAO,KAAK,CAAC,MAAM,IAAI,OAAO,GAAG,aAAa,IAAI,EAAE,CAAC,IAAI,GAAG,CAAC,CAAC;AACtE,KAAK;AACL;AACA,IAAI,YAAY,EAAE;AAClB,MAAM,YAAY,EAAE,cAAc,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,MAAM,CAAC,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACnF,MAAM,aAAa,EAAE,8CAA8C;AACnE,MAAM,aAAa,EAAE,CAAC,IAAI,EAAE,GAAG,CAAC;AAChC,MAAM,aAAa,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;AACxE,KAAK;AACL,GAAG,CAAC;AACJ,CACA;AACA,IAAI,KAAK,GAAG,SAAS,GAAG,EAAE,EAAE,OAAO,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;AACrD;AACY,MAAC,MAAM,GAAG,QAAQ,CAAC,EAAE,EAAC;AAClC;AACY,MAAC,MAAM,GAAG,QAAQ,CAAC;AAC/B,EAAE,cAAc,EAAE,KAAK,CAAC,6CAA6C;AACrE,wBAAwB,2CAA2C;AACnE,wBAAwB,wCAAwC,CAAC;AACjE,CAAC;;;;","x_google_ignoreList":[0]}