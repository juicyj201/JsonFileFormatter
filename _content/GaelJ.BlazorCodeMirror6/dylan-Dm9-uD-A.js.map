{"version":3,"file":"dylan-Dm9-uD-A.js","sources":["../NodeLib/node_modules/@codemirror/legacy-modes/mode/dylan.js"],"sourcesContent":["function forEach(arr, f) {\n  for (var i = 0; i < arr.length; i++) f(arr[i], i)\n}\nfunction some(arr, f) {\n  for (var i = 0; i < arr.length; i++) if (f(arr[i], i)) return true\n  return false\n}\n\n// Words\nvar words = {\n  // Words that introduce unnamed definitions like \"define interface\"\n  unnamedDefinition: [\"interface\"],\n\n  // Words that introduce simple named definitions like \"define library\"\n  namedDefinition: [\"module\", \"library\", \"macro\",\n                    \"C-struct\", \"C-union\",\n                    \"C-function\", \"C-callable-wrapper\"\n                   ],\n\n  // Words that introduce type definitions like \"define class\".\n  // These are also parameterized like \"define method\" and are\n  // appended to otherParameterizedDefinitionWords\n  typeParameterizedDefinition: [\"class\", \"C-subtype\", \"C-mapped-subtype\"],\n\n  // Words that introduce trickier definitions like \"define method\".\n  // These require special definitions to be added to startExpressions\n  otherParameterizedDefinition: [\"method\", \"function\",\n                                 \"C-variable\", \"C-address\"\n                                ],\n\n  // Words that introduce module constant definitions.\n  // These must also be simple definitions and are\n  // appended to otherSimpleDefinitionWords\n  constantSimpleDefinition: [\"constant\"],\n\n  // Words that introduce module variable definitions.\n  // These must also be simple definitions and are\n  // appended to otherSimpleDefinitionWords\n  variableSimpleDefinition: [\"variable\"],\n\n  // Other words that introduce simple definitions\n  // (without implicit bodies).\n  otherSimpleDefinition: [\"generic\", \"domain\",\n                          \"C-pointer-type\",\n                          \"table\"\n                         ],\n\n  // Words that begin statements with implicit bodies.\n  statement: [\"if\", \"block\", \"begin\", \"method\", \"case\",\n              \"for\", \"select\", \"when\", \"unless\", \"until\",\n              \"while\", \"iterate\", \"profiling\", \"dynamic-bind\"\n             ],\n\n  // Patterns that act as separators in compound statements.\n  // This may include any general pattern that must be indented\n  // specially.\n  separator: [\"finally\", \"exception\", \"cleanup\", \"else\",\n              \"elseif\", \"afterwards\"\n             ],\n\n  // Keywords that do not require special indentation handling,\n  // but which should be highlighted\n  other: [\"above\", \"below\", \"by\", \"from\", \"handler\", \"in\",\n          \"instance\", \"let\", \"local\", \"otherwise\", \"slot\",\n          \"subclass\", \"then\", \"to\", \"keyed-by\", \"virtual\"\n         ],\n\n  // Condition signaling function calls\n  signalingCalls: [\"signal\", \"error\", \"cerror\",\n                   \"break\", \"check-type\", \"abort\"\n                  ]\n};\n\nwords[\"otherDefinition\"] =\n  words[\"unnamedDefinition\"]\n  .concat(words[\"namedDefinition\"])\n  .concat(words[\"otherParameterizedDefinition\"]);\n\nwords[\"definition\"] =\n  words[\"typeParameterizedDefinition\"]\n  .concat(words[\"otherDefinition\"]);\n\nwords[\"parameterizedDefinition\"] =\n  words[\"typeParameterizedDefinition\"]\n  .concat(words[\"otherParameterizedDefinition\"]);\n\nwords[\"simpleDefinition\"] =\n  words[\"constantSimpleDefinition\"]\n  .concat(words[\"variableSimpleDefinition\"])\n  .concat(words[\"otherSimpleDefinition\"]);\n\nwords[\"keyword\"] =\n  words[\"statement\"]\n  .concat(words[\"separator\"])\n  .concat(words[\"other\"]);\n\n// Patterns\nvar symbolPattern = \"[-_a-zA-Z?!*@<>$%]+\";\nvar symbol = new RegExp(\"^\" + symbolPattern);\nvar patterns = {\n  // Symbols with special syntax\n  symbolKeyword: symbolPattern + \":\",\n  symbolClass: \"<\" + symbolPattern + \">\",\n  symbolGlobal: \"\\\\*\" + symbolPattern + \"\\\\*\",\n  symbolConstant: \"\\\\$\" + symbolPattern\n};\nvar patternStyles = {\n  symbolKeyword: \"atom\",\n  symbolClass: \"tag\",\n  symbolGlobal: \"variableName.standard\",\n  symbolConstant: \"variableName.constant\"\n};\n\n// Compile all patterns to regular expressions\nfor (var patternName in patterns)\n  if (patterns.hasOwnProperty(patternName))\n    patterns[patternName] = new RegExp(\"^\" + patterns[patternName]);\n\n// Names beginning \"with-\" and \"without-\" are commonly\n// used as statement macro\npatterns[\"keyword\"] = [/^with(?:out)?-[-_a-zA-Z?!*@<>$%]+/];\n\nvar styles = {};\nstyles[\"keyword\"] = \"keyword\";\nstyles[\"definition\"] = \"def\";\nstyles[\"simpleDefinition\"] = \"def\";\nstyles[\"signalingCalls\"] = \"builtin\";\n\n// protected words lookup table\nvar wordLookup = {};\nvar styleLookup = {};\n\nforEach([\n  \"keyword\",\n  \"definition\",\n  \"simpleDefinition\",\n  \"signalingCalls\"\n], function(type) {\n  forEach(words[type], function(word) {\n    wordLookup[word] = type;\n    styleLookup[word] = styles[type];\n  });\n});\n\n\nfunction chain(stream, state, f) {\n  state.tokenize = f;\n  return f(stream, state);\n}\n\nfunction tokenBase(stream, state) {\n  // String\n  var ch = stream.peek();\n  if (ch == \"'\" || ch == '\"') {\n    stream.next();\n    return chain(stream, state, tokenString(ch, \"string\"));\n  }\n  // Comment\n  else if (ch == \"/\") {\n    stream.next();\n    if (stream.eat(\"*\")) {\n      return chain(stream, state, tokenComment);\n    } else if (stream.eat(\"/\")) {\n      stream.skipToEnd();\n      return \"comment\";\n    }\n    stream.backUp(1);\n  }\n  // Decimal\n  else if (/[+\\-\\d\\.]/.test(ch)) {\n    if (stream.match(/^[+-]?[0-9]*\\.[0-9]*([esdx][+-]?[0-9]+)?/i) ||\n        stream.match(/^[+-]?[0-9]+([esdx][+-]?[0-9]+)/i) ||\n        stream.match(/^[+-]?\\d+/)) {\n      return \"number\";\n    }\n  }\n  // Hash\n  else if (ch == \"#\") {\n    stream.next();\n    // Symbol with string syntax\n    ch = stream.peek();\n    if (ch == '\"') {\n      stream.next();\n      return chain(stream, state, tokenString('\"', \"string\"));\n    }\n    // Binary number\n    else if (ch == \"b\") {\n      stream.next();\n      stream.eatWhile(/[01]/);\n      return \"number\";\n    }\n    // Hex number\n    else if (ch == \"x\") {\n      stream.next();\n      stream.eatWhile(/[\\da-f]/i);\n      return \"number\";\n    }\n    // Octal number\n    else if (ch == \"o\") {\n      stream.next();\n      stream.eatWhile(/[0-7]/);\n      return \"number\";\n    }\n    // Token concatenation in macros\n    else if (ch == '#') {\n      stream.next();\n      return \"punctuation\";\n    }\n    // Sequence literals\n    else if ((ch == '[') || (ch == '(')) {\n      stream.next();\n      return \"bracket\";\n      // Hash symbol\n    } else if (stream.match(/f|t|all-keys|include|key|next|rest/i)) {\n      return \"atom\";\n    } else {\n      stream.eatWhile(/[-a-zA-Z]/);\n      return \"error\";\n    }\n  } else if (ch == \"~\") {\n    stream.next();\n    ch = stream.peek();\n    if (ch == \"=\") {\n      stream.next();\n      ch = stream.peek();\n      if (ch == \"=\") {\n        stream.next();\n        return \"operator\";\n      }\n      return \"operator\";\n    }\n    return \"operator\";\n  } else if (ch == \":\") {\n    stream.next();\n    ch = stream.peek();\n    if (ch == \"=\") {\n      stream.next();\n      return \"operator\";\n    } else if (ch == \":\") {\n      stream.next();\n      return \"punctuation\";\n    }\n  } else if (\"[](){}\".indexOf(ch) != -1) {\n    stream.next();\n    return \"bracket\";\n  } else if (\".,\".indexOf(ch) != -1) {\n    stream.next();\n    return \"punctuation\";\n  } else if (stream.match(\"end\")) {\n    return \"keyword\";\n  }\n  for (var name in patterns) {\n    if (patterns.hasOwnProperty(name)) {\n      var pattern = patterns[name];\n      if ((pattern instanceof Array && some(pattern, function(p) {\n        return stream.match(p);\n      })) || stream.match(pattern))\n        return patternStyles[name];\n    }\n  }\n  if (/[+\\-*\\/^=<>&|]/.test(ch)) {\n    stream.next();\n    return \"operator\";\n  }\n  if (stream.match(\"define\")) {\n    return \"def\";\n  } else {\n    stream.eatWhile(/[\\w\\-]/);\n    // Keyword\n    if (wordLookup.hasOwnProperty(stream.current())) {\n      return styleLookup[stream.current()];\n    } else if (stream.current().match(symbol)) {\n      return \"variable\";\n    } else {\n      stream.next();\n      return \"variableName.standard\";\n    }\n  }\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, maybeNested = false, nestedCount = 0, ch;\n  while ((ch = stream.next())) {\n    if (ch == \"/\" && maybeEnd) {\n      if (nestedCount > 0) {\n        nestedCount--;\n      } else {\n        state.tokenize = tokenBase;\n        break;\n      }\n    } else if (ch == \"*\" && maybeNested) {\n      nestedCount++;\n    }\n    maybeEnd = (ch == \"*\");\n    maybeNested = (ch == \"/\");\n  }\n  return \"comment\";\n}\n\nfunction tokenString(quote, style) {\n  return function(stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end || !escaped) {\n      state.tokenize = tokenBase;\n    }\n    return style;\n  };\n}\n\n// Interface\nexport const dylan = {\n  name: \"dylan\",\n  startState: function() {\n    return {\n      tokenize: tokenBase,\n      currentIndent: 0\n    };\n  },\n  token: function(stream, state) {\n    if (stream.eatSpace())\n      return null;\n    var style = state.tokenize(stream, state);\n    return style;\n  },\n  languageData: {\n    commentTokens: {block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n\n"],"names":[],"mappings":"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","x_google_ignoreList":[0]}