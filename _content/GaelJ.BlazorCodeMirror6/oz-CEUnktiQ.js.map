{"version":3,"file":"oz-CEUnktiQ.js","sources":["../NodeLib/node_modules/@codemirror/legacy-modes/mode/oz.js"],"sourcesContent":["function wordRegexp(words) {\n  return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n}\n\nvar singleOperators = /[\\^@!\\|<>#~\\.\\*\\-\\+\\\\/,=]/;\nvar doubleOperators = /(<-)|(:=)|(=<)|(>=)|(<=)|(<:)|(>:)|(=:)|(\\\\=)|(\\\\=:)|(!!)|(==)|(::)/;\nvar tripleOperators = /(:::)|(\\.\\.\\.)|(=<:)|(>=:)/;\n\nvar middle = [\"in\", \"then\", \"else\", \"of\", \"elseof\", \"elsecase\", \"elseif\", \"catch\",\n              \"finally\", \"with\", \"require\", \"prepare\", \"import\", \"export\", \"define\", \"do\"];\nvar end = [\"end\"];\n\nvar atoms = wordRegexp([\"true\", \"false\", \"nil\", \"unit\"]);\nvar commonKeywords = wordRegexp([\"andthen\", \"at\", \"attr\", \"declare\", \"feat\", \"from\", \"lex\",\n                                 \"mod\", \"div\", \"mode\", \"orelse\", \"parser\", \"prod\", \"prop\", \"scanner\", \"self\", \"syn\", \"token\"]);\nvar openingKeywords = wordRegexp([\"local\", \"proc\", \"fun\", \"case\", \"class\", \"if\", \"cond\", \"or\", \"dis\",\n                                  \"choice\", \"not\", \"thread\", \"try\", \"raise\", \"lock\", \"for\", \"suchthat\", \"meth\", \"functor\"]);\nvar middleKeywords = wordRegexp(middle);\nvar endKeywords = wordRegexp(end);\n\n// Tokenizers\nfunction tokenBase(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  // Brackets\n  if(stream.match(/[{}]/)) {\n    return \"bracket\";\n  }\n\n  // Special [] keyword\n  if (stream.match('[]')) {\n    return \"keyword\"\n  }\n\n  // Operators\n  if (stream.match(tripleOperators) || stream.match(doubleOperators)) {\n    return \"operator\";\n  }\n\n  // Atoms\n  if(stream.match(atoms)) {\n    return 'atom';\n  }\n\n  // Opening keywords\n  var matched = stream.match(openingKeywords);\n  if (matched) {\n    if (!state.doInCurrentLine)\n      state.currentIndent++;\n    else\n      state.doInCurrentLine = false;\n\n    // Special matching for signatures\n    if(matched[0] == \"proc\" || matched[0] == \"fun\")\n      state.tokenize = tokenFunProc;\n    else if(matched[0] == \"class\")\n      state.tokenize = tokenClass;\n    else if(matched[0] == \"meth\")\n      state.tokenize = tokenMeth;\n\n    return 'keyword';\n  }\n\n  // Middle and other keywords\n  if (stream.match(middleKeywords) || stream.match(commonKeywords)) {\n    return \"keyword\"\n  }\n\n  // End keywords\n  if (stream.match(endKeywords)) {\n    state.currentIndent--;\n    return 'keyword';\n  }\n\n  // Eat the next char for next comparisons\n  var ch = stream.next();\n\n  // Strings\n  if (ch == '\"' || ch == \"'\") {\n    state.tokenize = tokenString(ch);\n    return state.tokenize(stream, state);\n  }\n\n  // Numbers\n  if (/[~\\d]/.test(ch)) {\n    if (ch == \"~\") {\n      if(! /^[0-9]/.test(stream.peek()))\n        return null;\n      else if (( stream.next() == \"0\" && stream.match(/^[xX][0-9a-fA-F]+/)) || stream.match(/^[0-9]*(\\.[0-9]+)?([eE][~+]?[0-9]+)?/))\n        return \"number\";\n    }\n\n    if ((ch == \"0\" && stream.match(/^[xX][0-9a-fA-F]+/)) || stream.match(/^[0-9]*(\\.[0-9]+)?([eE][~+]?[0-9]+)?/))\n      return \"number\";\n\n    return null;\n  }\n\n  // Comments\n  if (ch == \"%\") {\n    stream.skipToEnd();\n    return 'comment';\n  }\n  else if (ch == \"/\") {\n    if (stream.eat(\"*\")) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n  }\n\n  // Single operators\n  if(singleOperators.test(ch)) {\n    return \"operator\";\n  }\n\n  // If nothing match, we skip the entire alphanumerical block\n  stream.eatWhile(/\\w/);\n\n  return \"variable\";\n}\n\nfunction tokenClass(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n  stream.match(/([A-Z][A-Za-z0-9_]*)|(`.+`)/);\n  state.tokenize = tokenBase;\n  return \"type\"\n}\n\nfunction tokenMeth(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n  stream.match(/([a-zA-Z][A-Za-z0-9_]*)|(`.+`)/);\n  state.tokenize = tokenBase;\n  return \"def\"\n}\n\nfunction tokenFunProc(stream, state) {\n  if (stream.eatSpace()) {\n    return null;\n  }\n\n  if(!state.hasPassedFirstStage && stream.eat(\"{\")) {\n    state.hasPassedFirstStage = true;\n    return \"bracket\";\n  }\n  else if(state.hasPassedFirstStage) {\n    stream.match(/([A-Z][A-Za-z0-9_]*)|(`.+`)|\\$/);\n    state.hasPassedFirstStage = false;\n    state.tokenize = tokenBase;\n    return \"def\"\n  }\n  else {\n    state.tokenize = tokenBase;\n    return null;\n  }\n}\n\nfunction tokenComment(stream, state) {\n  var maybeEnd = false, ch;\n  while (ch = stream.next()) {\n    if (ch == \"/\" && maybeEnd) {\n      state.tokenize = tokenBase;\n      break;\n    }\n    maybeEnd = (ch == \"*\");\n  }\n  return \"comment\";\n}\n\nfunction tokenString(quote) {\n  return function (stream, state) {\n    var escaped = false, next, end = false;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next == \"\\\\\";\n    }\n    if (end || !escaped)\n      state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\n\nfunction buildElectricInputRegEx() {\n  // Reindentation should occur on [] or on a match of any of\n  // the block closing keywords, at the end of a line.\n  var allClosings = middle.concat(end);\n  return new RegExp(\"[\\\\[\\\\]]|(\" + allClosings.join(\"|\") + \")$\");\n}\n\nexport const oz = {\n  name: \"oz\",\n\n  startState: function () {\n    return {\n      tokenize: tokenBase,\n      currentIndent: 0,\n      doInCurrentLine: false,\n      hasPassedFirstStage: false\n    };\n  },\n\n  token: function (stream, state) {\n    if (stream.sol())\n      state.doInCurrentLine = 0;\n\n    return state.tokenize(stream, state);\n  },\n\n  indent: function (state, textAfter, cx) {\n    var trueText = textAfter.replace(/^\\s+|\\s+$/g, '');\n\n    if (trueText.match(endKeywords) || trueText.match(middleKeywords) || trueText.match(/(\\[])/))\n      return cx.unit * (state.currentIndent - 1);\n\n    if (state.currentIndent < 0)\n      return 0;\n\n    return state.currentIndent * cx.unit\n  },\n\n  languageData: {\n    indentOnInut: buildElectricInputRegEx(),\n    commentTokens: {line: \"%\", block: {open: \"/*\", close: \"*/\"}}\n  }\n};\n"],"names":[],"mappings":"AAAA,SAAS,UAAU,CAAC,KAAK,EAAE;AAC3B,EAAE,OAAO,IAAI,MAAM,CAAC,KAAK,GAAG,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,CAAC;AACzD,CAAC;AACD;AACA,IAAI,eAAe,GAAG,2BAA2B,CAAC;AAClD,IAAI,eAAe,GAAG,qEAAqE,CAAC;AAC5F,IAAI,eAAe,GAAG,4BAA4B,CAAC;AACnD;AACA,IAAI,MAAM,GAAG,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO;AACjF,cAAc,SAAS,EAAE,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC3F,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,CAAC;AAClB;AACA,IAAI,KAAK,GAAG,UAAU,CAAC,CAAC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC;AACzD,IAAI,cAAc,GAAG,UAAU,CAAC,CAAC,SAAS,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK;AAC1F,iCAAiC,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC;AAC/H,IAAI,eAAe,GAAG,UAAU,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,KAAK;AACpG,kCAAkC,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,CAAC,CAAC,CAAC;AAC5H,IAAI,cAAc,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC;AACxC,IAAI,WAAW,GAAG,UAAU,CAAC,GAAG,CAAC,CAAC;AAClC;AACA;AACA,SAAS,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE;AAClC,EAAE,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;AACzB,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH;AACA;AACA,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE;AAC3B,IAAI,OAAO,SAAS,CAAC;AACrB,GAAG;AACH;AACA;AACA,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;AAC1B,IAAI,OAAO,SAAS;AACpB,GAAG;AACH;AACA;AACA,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,EAAE;AACtE,IAAI,OAAO,UAAU,CAAC;AACtB,GAAG;AACH;AACA;AACA,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,EAAE;AAC1B,IAAI,OAAO,MAAM,CAAC;AAClB,GAAG;AACH;AACA;AACA,EAAE,IAAI,OAAO,GAAG,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;AAC9C,EAAE,IAAI,OAAO,EAAE;AACf,IAAI,IAAI,CAAC,KAAK,CAAC,eAAe;AAC9B,MAAM,KAAK,CAAC,aAAa,EAAE,CAAC;AAC5B;AACA,MAAM,KAAK,CAAC,eAAe,GAAG,KAAK,CAAC;AACpC;AACA;AACA,IAAI,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM,IAAI,OAAO,CAAC,CAAC,CAAC,IAAI,KAAK;AAClD,MAAM,KAAK,CAAC,QAAQ,GAAG,YAAY,CAAC;AACpC,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,OAAO;AACjC,MAAM,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAC;AAClC,SAAS,GAAG,OAAO,CAAC,CAAC,CAAC,IAAI,MAAM;AAChC,MAAM,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AACjC;AACA,IAAI,OAAO,SAAS,CAAC;AACrB,GAAG;AACH;AACA;AACA,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC,EAAE;AACpE,IAAI,OAAO,SAAS;AACpB,GAAG;AACH;AACA;AACA,EAAE,IAAI,MAAM,CAAC,KAAK,CAAC,WAAW,CAAC,EAAE;AACjC,IAAI,KAAK,CAAC,aAAa,EAAE,CAAC;AAC1B,IAAI,OAAO,SAAS,CAAC;AACrB,GAAG;AACH;AACA;AACA,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;AACzB;AACA;AACA,EAAE,IAAI,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,GAAG,EAAE;AAC9B,IAAI,KAAK,CAAC,QAAQ,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;AACrC,IAAI,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACzC,GAAG;AACH;AACA;AACA,EAAE,IAAI,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AACxB,IAAI,IAAI,EAAE,IAAI,GAAG,EAAE;AACnB,MAAM,GAAG,EAAE,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;AACvC,QAAQ,OAAO,IAAI,CAAC;AACpB,WAAW,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,IAAI,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,KAAK,MAAM,CAAC,KAAK,CAAC,sCAAsC,CAAC;AACnI,QAAQ,OAAO,QAAQ,CAAC;AACxB,KAAK;AACL;AACA,IAAI,IAAI,CAAC,EAAE,IAAI,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,mBAAmB,CAAC,KAAK,MAAM,CAAC,KAAK,CAAC,sCAAsC,CAAC;AAChH,MAAM,OAAO,QAAQ,CAAC;AACtB;AACA,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH;AACA;AACA,EAAE,IAAI,EAAE,IAAI,GAAG,EAAE;AACjB,IAAI,MAAM,CAAC,SAAS,EAAE,CAAC;AACvB,IAAI,OAAO,SAAS,CAAC;AACrB,GAAG;AACH,OAAO,IAAI,EAAE,IAAI,GAAG,EAAE;AACtB,IAAI,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACzB,MAAM,KAAK,CAAC,QAAQ,GAAG,YAAY,CAAC;AACpC,MAAM,OAAO,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACzC,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,GAAG,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE;AAC/B,IAAI,OAAO,UAAU,CAAC;AACtB,GAAG;AACH;AACA;AACA,EAAE,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACxB;AACA,EAAE,OAAO,UAAU,CAAC;AACpB,CAAC;AACD;AACA,SAAS,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE;AACnC,EAAE,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;AACzB,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,MAAM,CAAC,KAAK,CAAC,6BAA6B,CAAC,CAAC;AAC9C,EAAE,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC7B,EAAE,OAAO,MAAM;AACf,CAAC;AACD;AACA,SAAS,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE;AAClC,EAAE,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;AACzB,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,EAAE,MAAM,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACjD,EAAE,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC7B,EAAE,OAAO,KAAK;AACd,CAAC;AACD;AACA,SAAS,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE;AACrC,EAAE,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE;AACzB,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH;AACA,EAAE,GAAG,CAAC,KAAK,CAAC,mBAAmB,IAAI,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,EAAE;AACpD,IAAI,KAAK,CAAC,mBAAmB,GAAG,IAAI,CAAC;AACrC,IAAI,OAAO,SAAS,CAAC;AACrB,GAAG;AACH,OAAO,GAAG,KAAK,CAAC,mBAAmB,EAAE;AACrC,IAAI,MAAM,CAAC,KAAK,CAAC,gCAAgC,CAAC,CAAC;AACnD,IAAI,KAAK,CAAC,mBAAmB,GAAG,KAAK,CAAC;AACtC,IAAI,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC/B,IAAI,OAAO,KAAK;AAChB,GAAG;AACH,OAAO;AACP,IAAI,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC/B,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG;AACH,CAAC;AACD;AACA,SAAS,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE;AACrC,EAAE,IAAI,QAAQ,GAAG,KAAK,EAAE,EAAE,CAAC;AAC3B,EAAE,OAAO,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,EAAE;AAC7B,IAAI,IAAI,EAAE,IAAI,GAAG,IAAI,QAAQ,EAAE;AAC/B,MAAM,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AACjC,MAAM,MAAM;AACZ,KAAK;AACL,IAAI,QAAQ,IAAI,EAAE,IAAI,GAAG,CAAC,CAAC;AAC3B,GAAG;AACH,EAAE,OAAO,SAAS,CAAC;AACnB,CAAC;AACD;AACA,SAAS,WAAW,CAAC,KAAK,EAAE;AAC5B,EAAE,OAAO,UAAU,MAAM,EAAE,KAAK,EAAE;AAClC,IAAI,IAAI,OAAO,GAAG,KAAK,EAAE,IAAI,EAAE,GAAG,GAAG,KAAK,CAAC;AAC3C,IAAI,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;AAC3C,MAAM,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,OAAO,EAAE;AACrC,QAAQ,GAAG,GAAG,IAAI,CAAC;AACnB,QAAQ,MAAM;AACd,OAAO;AACP,MAAM,OAAO,GAAG,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC;AACzC,KAAK;AACL,IAAI,IAAI,GAAG,IAAI,CAAC,OAAO;AACvB,MAAM,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AACjC,IAAI,OAAO,QAAQ,CAAC;AACpB,GAAG,CAAC;AACJ,CAAC;AACD;AACA,SAAS,uBAAuB,GAAG;AACnC;AACA;AACA,EAAE,IAAI,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;AACvC,EAAE,OAAO,IAAI,MAAM,CAAC,YAAY,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;AACjE,CAAC;AACD;AACY,MAAC,EAAE,GAAG;AAClB,EAAE,IAAI,EAAE,IAAI;AACZ;AACA,EAAE,UAAU,EAAE,YAAY;AAC1B,IAAI,OAAO;AACX,MAAM,QAAQ,EAAE,SAAS;AACzB,MAAM,aAAa,EAAE,CAAC;AACtB,MAAM,eAAe,EAAE,KAAK;AAC5B,MAAM,mBAAmB,EAAE,KAAK;AAChC,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,KAAK,EAAE,UAAU,MAAM,EAAE,KAAK,EAAE;AAClC,IAAI,IAAI,MAAM,CAAC,GAAG,EAAE;AACpB,MAAM,KAAK,CAAC,eAAe,GAAG,CAAC,CAAC;AAChC;AACA,IAAI,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACzC,GAAG;AACH;AACA,EAAE,MAAM,EAAE,UAAU,KAAK,EAAE,SAAS,EAAE,EAAE,EAAE;AAC1C,IAAI,IAAI,QAAQ,GAAG,SAAS,CAAC,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CAAC;AACvD;AACA,IAAI,IAAI,QAAQ,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;AAChG,MAAM,OAAO,EAAE,CAAC,IAAI,IAAI,KAAK,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC;AACjD;AACA,IAAI,IAAI,KAAK,CAAC,aAAa,GAAG,CAAC;AAC/B,MAAM,OAAO,CAAC,CAAC;AACf;AACA,IAAI,OAAO,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC,IAAI;AACxC,GAAG;AACH;AACA,EAAE,YAAY,EAAE;AAChB,IAAI,YAAY,EAAE,uBAAuB,EAAE;AAC3C,IAAI,aAAa,EAAE,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;AAChE,GAAG;AACH;;;;","x_google_ignoreList":[0]}