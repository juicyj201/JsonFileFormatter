{"version":3,"file":"solr-DRA9IpCe.js","sources":["../NodeLib/node_modules/@codemirror/legacy-modes/mode/solr.js"],"sourcesContent":["var isStringChar = /[^\\s\\|\\!\\+\\-\\*\\?\\~\\^\\&\\:\\(\\)\\[\\]\\{\\}\\\"\\\\]/;\nvar isOperatorChar = /[\\|\\!\\+\\-\\*\\?\\~\\^\\&]/;\nvar isOperatorString = /^(OR|AND|NOT|TO)$/i;\n\nfunction isNumber(word) {\n  return parseFloat(word).toString() === word;\n}\n\nfunction tokenString(quote) {\n  return function(stream, state) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (next == quote && !escaped) break;\n      escaped = !escaped && next == \"\\\\\";\n    }\n\n    if (!escaped) state.tokenize = tokenBase;\n    return \"string\";\n  };\n}\n\nfunction tokenOperator(operator) {\n  return function(stream, state) {\n    if (operator == \"|\")\n      stream.eat(/\\|/);\n    else if (operator == \"&\")\n      stream.eat(/\\&/);\n\n    state.tokenize = tokenBase;\n    return \"operator\";\n  };\n}\n\nfunction tokenWord(ch) {\n  return function(stream, state) {\n    var word = ch;\n    while ((ch = stream.peek()) && ch.match(isStringChar) != null) {\n      word += stream.next();\n    }\n\n    state.tokenize = tokenBase;\n    if (isOperatorString.test(word))\n      return \"operator\";\n    else if (isNumber(word))\n      return \"number\";\n    else if (stream.peek() == \":\")\n      return \"propertyName\";\n    else\n      return \"string\";\n  };\n}\n\nfunction tokenBase(stream, state) {\n  var ch = stream.next();\n  if (ch == '\"')\n    state.tokenize = tokenString(ch);\n  else if (isOperatorChar.test(ch))\n    state.tokenize = tokenOperator(ch);\n  else if (isStringChar.test(ch))\n    state.tokenize = tokenWord(ch);\n\n  return (state.tokenize != tokenBase) ? state.tokenize(stream, state) : null;\n}\n\nexport const solr = {\n  name: \"solr\",\n\n  startState: function() {\n    return {\n      tokenize: tokenBase\n    };\n  },\n\n  token: function(stream, state) {\n    if (stream.eatSpace()) return null;\n    return state.tokenize(stream, state);\n  }\n};\n"],"names":[],"mappings":"AAAA,IAAI,YAAY,GAAG,2CAA2C,CAAC;AAC/D,IAAI,cAAc,GAAG,sBAAsB,CAAC;AAC5C,IAAI,gBAAgB,GAAG,oBAAoB,CAAC;AAC5C;AACA,SAAS,QAAQ,CAAC,IAAI,EAAE;AACxB,EAAE,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,KAAK,IAAI,CAAC;AAC9C,CAAC;AACD;AACA,SAAS,WAAW,CAAC,KAAK,EAAE;AAC5B,EAAE,OAAO,SAAS,MAAM,EAAE,KAAK,EAAE;AACjC,IAAI,IAAI,OAAO,GAAG,KAAK,EAAE,IAAI,CAAC;AAC9B,IAAI,OAAO,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,IAAI,EAAE;AAC3C,MAAM,IAAI,IAAI,IAAI,KAAK,IAAI,CAAC,OAAO,EAAE,MAAM;AAC3C,MAAM,OAAO,GAAG,CAAC,OAAO,IAAI,IAAI,IAAI,IAAI,CAAC;AACzC,KAAK;AACL;AACA,IAAI,IAAI,CAAC,OAAO,EAAE,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC7C,IAAI,OAAO,QAAQ,CAAC;AACpB,GAAG,CAAC;AACJ,CAAC;AACD;AACA,SAAS,aAAa,CAAC,QAAQ,EAAE;AACjC,EAAE,OAAO,SAAS,MAAM,EAAE,KAAK,EAAE;AACjC,IAAI,IAAI,QAAQ,IAAI,GAAG;AACvB,MAAM,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACvB,SAAS,IAAI,QAAQ,IAAI,GAAG;AAC5B,MAAM,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AACvB;AACA,IAAI,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC/B,IAAI,OAAO,UAAU,CAAC;AACtB,GAAG,CAAC;AACJ,CAAC;AACD;AACA,SAAS,SAAS,CAAC,EAAE,EAAE;AACvB,EAAE,OAAO,SAAS,MAAM,EAAE,KAAK,EAAE;AACjC,IAAI,IAAI,IAAI,GAAG,EAAE,CAAC;AAClB,IAAI,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,KAAK,EAAE,CAAC,KAAK,CAAC,YAAY,CAAC,IAAI,IAAI,EAAE;AACnE,MAAM,IAAI,IAAI,MAAM,CAAC,IAAI,EAAE,CAAC;AAC5B,KAAK;AACL;AACA,IAAI,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC/B,IAAI,IAAI,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC;AACnC,MAAM,OAAO,UAAU,CAAC;AACxB,SAAS,IAAI,QAAQ,CAAC,IAAI,CAAC;AAC3B,MAAM,OAAO,QAAQ,CAAC;AACtB,SAAS,IAAI,MAAM,CAAC,IAAI,EAAE,IAAI,GAAG;AACjC,MAAM,OAAO,cAAc,CAAC;AAC5B;AACA,MAAM,OAAO,QAAQ,CAAC;AACtB,GAAG,CAAC;AACJ,CAAC;AACD;AACA,SAAS,SAAS,CAAC,MAAM,EAAE,KAAK,EAAE;AAClC,EAAE,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,EAAE,CAAC;AACzB,EAAE,IAAI,EAAE,IAAI,GAAG;AACf,IAAI,KAAK,CAAC,QAAQ,GAAG,WAAW,CAAC,EAAE,CAAC,CAAC;AACrC,OAAO,IAAI,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC;AAClC,IAAI,KAAK,CAAC,QAAQ,GAAG,aAAa,CAAC,EAAE,CAAC,CAAC;AACvC,OAAO,IAAI,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC;AAChC,IAAI,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAC,EAAE,CAAC,CAAC;AACnC;AACA,EAAE,OAAO,CAAC,KAAK,CAAC,QAAQ,IAAI,SAAS,IAAI,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,IAAI,CAAC;AAC9E,CAAC;AACD;AACY,MAAC,IAAI,GAAG;AACpB,EAAE,IAAI,EAAE,MAAM;AACd;AACA,EAAE,UAAU,EAAE,WAAW;AACzB,IAAI,OAAO;AACX,MAAM,QAAQ,EAAE,SAAS;AACzB,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,KAAK,EAAE,SAAS,MAAM,EAAE,KAAK,EAAE;AACjC,IAAI,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAE,OAAO,IAAI,CAAC;AACvC,IAAI,OAAO,KAAK,CAAC,QAAQ,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACzC,GAAG;AACH;;;;","x_google_ignoreList":[0]}